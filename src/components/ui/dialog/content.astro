---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

type Props = HTMLAttributes<"dialog"> &
  ContentVariants & {
    /**
     * Animation duration in milliseconds
     * @default 200
     */
    animationDuration?: number;
  };

export type ContentVariants = VariantProps<typeof variants>;

const backdropVariants = cva([
  "dialog-backdrop fixed inset-0 top-0 left-0 z-50 hidden h-screen w-screen bg-black/80",
  "data-[state=open]:animate-in fade-in",
  "data-[state=closed]:animate-out data-[state=closed]:fill-mode-forwards fade-out",
]);

const variants = cva([
  "fixed top-16 left-[50%] z-50 translate-x-[-50%] sm:top-[50%] sm:translate-y-[-50%]",
  "bg-background w-full max-w-md border p-8 shadow-lg sm:rounded-lg",
  "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fill-mode-forwards",
  "fade-in zoom-in-95 slide-in-from-bottom-2",
  "fade-out zoom-out-95 slide-out-to-bottom-2",
]);

const closeButtonVariants = cva([
  "dialog-close text-muted-foreground",
  "absolute top-5.5 right-5.5 rounded-sm opacity-70 transition-opacity hover:opacity-100 disabled:pointer-events-none",
  "focus-visible:outline-outline focus-visible:outline-2 focus-visible:outline-offset-2",
]);

const { class: className, animationDuration = 200, ...props } = Astro.props;
---

<div
  class={backdropVariants()}
  data-state="closed"
  data-slot="dialog-backdrop"
  style={{ animationDuration: `${animationDuration}ms` }}
>
</div>

<dialog
  {...props}
  class={variants({ className })}
  data-state="closed"
  data-slot="dialog-content"
  style={{ animationDuration: `${animationDuration}ms` }}
>
  <slot />
  <button type="button" class={closeButtonVariants()} data-dialog-close aria-label="Close dialog">
    <svg class="size-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"
      ></path>
    </svg>
    <span class="sr-only">Close</span>
  </button>
</dialog>
