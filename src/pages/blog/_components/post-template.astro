---
import type { Page } from "astro";
import { db, sum, post_view } from "astro:db";
import { getPopularTags, type GetAllTags, type GetSortedPosts } from "#/content/utils";

import Layout from "#/layouts/layout.astro";
import Icon from "#/components/ui/icon.astro";
import Text from "#/components/ui/text.astro";
import Number from "#/components/ui/number.astro";
import Separator from "#/components/ui/separator.astro";
import * as Paginator from "#/components/ui/paginator";

import PostCard from "./post-card.astro";
import SearchBox from "./search-box.astro";

type Props = Page<GetSortedPosts[0]> & { tag?: GetAllTags[0]["id"] };

const tags = (await getPopularTags()).map((tag) => tag.text);
const { data: paginatedPosts, url, currentPage, lastPage, total } = Astro.props;

const views = await db
  .select({ totalViews: sum(post_view.views) })
  .from(post_view)
  .get();
const totalViews = views?.totalViews ?? 0;
---

<Layout
  metadata={{
    title: "üßë‚ÄçüöÄ Latest Blog Posts !",
    description: "Explore the Cosmos of Ideas! Latest Blog Posts",
  }}
>
  <section class="text-muted-foreground space-y-4 py-6 font-sans">
    <div class="w-full space-y-3 text-center">
      <Text as="h1" class="font-8bit font-bold" size="3xl" variant="muted"
        >üßë‚ÄçüöÄ Latest Blog Posts !</Text
      >
      <p>Explore the Cosmos of Ideas! Latest Blog Posts</p>

      <div class="text-foreground mt-6 flex items-center gap-4">
        <Text as="h1" size="2xl" class="font-bold uppercase">ALL Posts</Text>

        <Separator class="flex-1" />

        <div class="flex items-center text-sm">
          <Number value={+totalViews}> Views</Number>
          <Icon name="dot" class="shrink-0" size="sm" aria-hidden />
          <span>{total} Posts</span>
        </div>
      </div>

      <SearchBox tags={tags} />
    </div>

    <div class="mt-8 grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3" data-static-posts>
      {
        paginatedPosts.map((post) => (
          <PostCard class="mb-4 break-inside-avoid" slug={post.id} post={post.data} />
        ))
      }
    </div>

    <Paginator.Root class="justify-self-center">
      <Paginator.Control page="first" href={url.first} disabled={!url.first} />
      <Paginator.Control page="previous" href={url.prev} disabled={!url.prev} />
      <Paginator.Page current={currentPage} max={lastPage} />
      <Paginator.Control page="next" href={url.next} disabled={!url.next} />
      <Paginator.Control page="last" href={url.last} disabled={!url.last} />
    </Paginator.Root>
  </section>
</Layout>
