---
import type { MarkdownHeading } from "astro";

import { buildToc } from "#/lib/utils";
import * as List from "#/components/ui/list";

export type Props = {
  headings: MarkdownHeading[];
};

const { headings } = Astro.props;
const toc = buildToc(headings);
---

{
  toc.length > 3 && (
    <details
      class="group bg-card/40 font-syne-mono rounded-lg border p-3 text-sm shadow-sm"
      aria-label="Table of contents"
    >
      <summary
        class:list={[
          "font-8bit hover:text-link-hover relative",
          "flex cursor-zoom-out list-none items-center justify-between gap-2 transition-colors select-none",
        ]}
      >
        ðŸ“š On this page
        <span
          class="aria-hidden rotate-0 font-bold transition-transform group-open:rotate-90"
          aria-hidden="true"
        >
          âž¤
        </span>
      </summary>

      <List.Root class="mt-3 space-y-2">
        {toc.map((heading) => (
          <List.Item>
            <List.ItemLink
              href={`#${heading.slug}`}
              class="hover:text-link-hover transition-colors"
            >
              {heading.text.replace("#", "")}
            </List.ItemLink>

            {Array.isArray(heading.subheadings) && heading.subheadings.length > 0 && (
              <List.Root class="border-border mt-1 ml-4 space-y-1 border-l pl-3">
                {heading.subheadings.map((sub) => (
                  <List.Item>
                    <List.ItemLink
                      href={`#${sub.slug}`}
                      class="text-muted-foreground hover:text-link-hover transition-colors"
                    >
                      {sub.text.replace("#", "")}
                    </List.ItemLink>
                  </List.Item>
                ))}
              </List.Root>
            )}
          </List.Item>
        ))}
      </List.Root>
    </details>
  )
}
