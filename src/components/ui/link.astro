---
import type { ComponentProps } from "astro/types";
import Icon, { type IconVariants } from "./icon.astro";
import Text from "./text.astro";
import { cn } from "#/lib/utils";

type Props = Omit<ComponentProps<typeof Text<"a">>, "as"> & {
  icon?: string;
  iconSize?: NonNullable<IconVariants["size"]>;
  iconPosition?: "left" | "right";
};

const {
  class: className,
  href,
  target,
  rel,
  variant,
  icon,
  iconSize = "sm",
  iconPosition = "left",
  ...props
} = Astro.props;

const external = href?.toString().startsWith("https://");
---

<Text
  {...props}
  {href}
  as="a"
  variant={variant ?? "default"}
  target={external ? "_blank" : target}
  rel={external ? "noopener noreferrer" : rel}
  class={cn(
    "group inline-flex items-center rounded transition-all",
    (icon || external) && "gap-1",
    className
  )}
>
  {icon && iconPosition === "left" ? <Icon name={icon} size={iconSize} /> : null}
  <slot />
  {icon && iconPosition === "right" ? <Icon name={icon} size={iconSize} /> : null}
  {!icon && external ? <Icon name="arrow-up-right" size={iconSize} /> : null}
</Text>
