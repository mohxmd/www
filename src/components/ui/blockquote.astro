---
import Icon from "#/components/ui/icon.astro";
import * as Alert from "#/components/ui/alert";

type AlertVariant = Alert.AlertVariants["variant"];

let raw = "";
if (Astro.slots.has("default")) {
  raw = await Astro.slots.render("default");
}

const plain = raw
  .replace(/<[^>]*>/g, " ")
  .replace(/\s+/g, " ")
  .trim();

let variant: AlertVariant = "info";
let icon = "info";
let title = "";

const rules = [
  { key: "success", variant: "success" as AlertVariant, icon: "check-circle" },
  { key: "error", variant: "error" as AlertVariant, icon: "flame" },
  { key: "warning", variant: "warning" as AlertVariant, icon: "alert-octagon" },
  { key: "info", variant: "info" as AlertVariant, icon: "info" },
  { key: "tip", variant: "info" as AlertVariant, icon: "coffee" },
  { key: "fact", variant: "info" as AlertVariant, icon: "sparkles" },
];

for (const r of rules) {
  const regex = new RegExp(`^\\s*${r.key}\\s*[:\\-]\\s*`, "i");
  if (regex.test(plain)) {
    variant = r.variant;
    icon = r.icon;
    title = r.key.charAt(0).toUpperCase() + r.key.slice(1);
    break;
  }
}

const inferredRole = variant === "error" || variant === "warning" ? "alert" : "status";
---

<blockquote class="not-prose" aria-label={title || "Note"}>
  <Alert.Root variant={variant} role={inferredRole}>
    <Alert.Title>
      <Icon name={icon} />
      <span>{title}</span>
    </Alert.Title>

    <Alert.Description>
      <slot />
    </Alert.Description>
  </Alert.Root>
</blockquote>
